gapminder_join %>%
ggplot(aes(x=year)) +
geom_line(aes(y=gdp_per_capita)) +
geom_line( aes(y=population/coeff)) +
group=1+
scale_y_continuous(
name = "GDP per capita",
sec.axis = sec_axis(~.*coeff, name="Population")
)
gapminder_join$year <- as.numeric(gapminder_join$year)
coeff <- 100
gapminder_join %>%
ggplot(aes(x=year)) +
geom_line(aes(y=gdp_per_capita)) +
geom_line( aes(y=population/coeff)) +
scale_y_continuous(
name = "GDP per capita",
sec.axis = sec_axis(~.*coeff, name="Population")
)
gapminder_join$gdp_per_capita <- as.numeric(gapminder_join$gdp_per_capita)
gapminder_join$population <- as.numeric(gapminder_join$population)
gapminder_join$year <- as.numeric(gapminder_join$year)
coeff <- 100
gapminder_join %>%
ggplot(aes(x=year)) +
geom_line(aes(y=gdp_per_capita)) +
geom_line( aes(y=population/coeff)) +
scale_y_continuous(
name = "GDP per capita",
sec.axis = sec_axis(~.*coeff, name="Population")
)
gapminder_join %>%
filter(country=="United States") %>%
ggplot(aes(x=year)) +
geom_line(aes(y = population, color = "darkred")) +
geom_line(aes(y = gdp_per_capita), color="steelblue")
gapminder_join %>%
mutate(log10_population=log10(population))
filter(country=="United States") %>%
ggplot(aes(x=year)) +
geom_line(aes(y = log10_population, color = "darkred")) +
geom_line(aes(y = gdp_per_capita), color="steelblue")
gapminder_join %>%
mutate(log10_population=log10(population)) %>%
filter(country=="United States") %>%
ggplot(aes(x=year)) +
geom_line(aes(y = log10_population, color = "darkred")) +
geom_line(aes(y = gdp_per_capita), color="steelblue")
gapminder_join %>%
filter(year=2020) %>%
arrange(desc(population))
gapminder_join %>%
filter(year==2020) %>%
arrange(desc(population))
gapminder_join %>%
filter(country=="China"|country=="India"|country=="United States", country=="Indonesia"|country=="Pakistan") %>%
ggplot(aes(x=life_expectancy, y=population, color=country))+
geom_line()
gapminder_join %>%
filter(country=="China"|country=="India"|country=="United States", country=="Indonesia"|country=="Pakistan") %>%
ggplot(aes(x=life_expectancy, y=population, color=country))+
geom_line()+geom_point()
gapminder_join %>%
filter(country=="China"|country=="India"|country=="United States", country=="Indonesia"|country=="Pakistan") %>%
ggplot(aes(x=life_expectancy, y=population, color=country))+
geom_line()+geom_point()
gapminder_join$life_expectancy <- as.numeric(gapminder_join$life_expectancy)
gapminder_join$population <- as.numeric(gapminder_join$population)
gapminder_join %>%
filter(country=="China"|country=="India"|country=="United States", country=="Indonesia"|country=="Pakistan") %>%
ggplot(aes(x=life_expectancy, y=population, color=country))+
geom_line()+geom_point()
gapminder_join %>%
filter(country=="China"|country=="India"|country=="United States", country=="Indonesia"|country=="Pakistan") %>%
ggplot(aes(x=life_expectancy, y=population, color=country))+
geom_line()+geom_point()
gapminder_join %>%
filter(country=="China"|country=="India"|country=="United States", country=="Indonesia"|country=="Pakistan") %>%
ggplot(aes(x=life_expectancy, y=population, color=country))+
geom_line()+geom_point()+
facet_grid(~country)
#gapminder_join %>%
#filter(year==2020) %>%
#arrange(desc(population))
gapminder_join %>%
filter(country=="China"|country=="India"|country=="United States", country=="Indonesia"|country=="Pakistan") %>%
ggplot(aes(x=life_expectancy, y=population, color=country))+
geom_line()+geom_point()+
facet_grid(~country)
gapminder_join %>%
filter(country=="China"|country=="India"|country=="United States", country=="Indonesia"|country=="Pakistan") %>%
ggplot(aes(x=life_expectancy, y=population, color=country))+
geom_line()+geom_point()+
facet_grid(~country)
gapminder_join %>%
filter(country=="China"|country=="India"|country=="United States", country=="Indonesia"|country=="Pakistan") %>%
ggplot(aes(x=life_expectancy, y=population, color=country))+
geom_line()+geom_point()
gapminder_join %>%
filter(country=="China"|country=="India"|country=="United States", country=="Indonesia"|country=="Pakistan") %>%
ggplot(aes(x=life_expectancy, y=population, color=country))+geom_point()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(here)
options(scipen=999) #disables scientific notation when printing
population <- read_csv("data/population_total.csv")
population
income <- read_csv("data/income_per_person_gdppercapita_ppp_inflation_adjusted.csv")
income
life_expectancy <- read_csv("data/life_expectancy_years.csv")
life_expectancy
skim(population)
pop_tidy <- population %>%
pivot_longer(-country, #country does not pivot
names_to = "year",
values_to = "population"
)
pop_tidy
skim(income)
income_tidy <- income %>%
pivot_longer(-country, #country does not pivot
names_to = "year",
values_to = "gdp_per_capita"
)
income_tidy
skim(life_expectancy)
life_tidy <- life_expectancy %>%
pivot_longer(-country, #country does not pivot
names_to = "year",
values_to = "life_expectancy"
)
life_tidy
pop_tidy %>%
group_by(country) %>%
summarize(n_country=n_distinct(country))
income_tidy %>%
group_by(country) %>%
summarize(n_country=n_distinct(country))
life_tidy %>%
group_by(country) %>%
summarize(n_country=n_distinct(country))
hundred_life <- life_tidy %>%
filter(year<=2020, year>=1920) %>%
group_by(country) %>%
summarize(mean_life_expectancy=mean(life_expectancy, na.rm=T))
hundred_life
hundred_life %>%
arrange(desc(mean_life_expectancy))
life_tidy %>%
filter(country=="Andorra") %>%
filter(year>=1920, year<=2020)
life_tidy %>%
filter(country=="Sweden") %>%
filter(year>=1920, year<=2020)
hundred_life %>%
arrange(mean_life_expectancy)
life_tidy %>%
filter(country=="Andorra") %>%
filter(year>=1920, year<=2020)
life_tidy %>%
filter(country=="Mali") %>%
filter(year>=1920, year<=2020)
life_exp_improve <- life_tidy %>%
filter(year==2020|year==1920) %>%
group_by(country) %>%
summarize(improvement_years=max(life_expectancy)-min(life_expectancy))
life_exp_improve
life_exp_improve %>%
arrange(desc(improvement_years))
life_tidy$year <- as.numeric(life_tidy$year)
life_tidy %>%
filter(year<=2020,year>=1920) %>%
filter(country=="Kuwait") %>%
ggplot(aes(x=year, y=life_expectancy))+geom_point()+geom_line()+
theme(text = element_text(size=6),
axis.text.x = element_text(angle=60, hjust=1)) +
theme(plot.title = element_text(size = 12, face = "bold"),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10))+
labs(title = "Life Expectancy in Kuwait (1920-2020)",
x = "Year",
y= "Life Expectancy")
pop_growth_hundred <- pop_tidy %>%
filter(year==2020|year==1920) %>%
group_by(country) %>%
summarize(population_growth=max(population)-min(population)) %>%
arrange(desc(population_growth))
pop_growth_hundred
pop_tidy$year <- as.numeric(pop_tidy$year)
pop_tidy %>%
filter(year<=2020,year>=1920) %>%
filter(country=="India"|country=="China"|country=="Indonesia"|country=="United States"|country=="Pakistan") %>%
ggplot(aes(x=year, y=population, color=country))+geom_point(shape=1)+geom_line()+
theme(text = element_text(size=6),
axis.text.x = element_text(angle=60, hjust=1)) +
theme(plot.title = element_text(size = 12, face = "bold"),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10))+
labs(title = "Population over Time",
x = "Year",
y= "Population")
gdp_increase_hundred <- income_tidy %>%
filter(year==2020|year==1920) %>%
group_by(country) %>%
summarize(gdp_growth=max(gdp_per_capita)-min(gdp_per_capita)) %>%
arrange(desc(gdp_growth))
gdp_increase_hundred
income_tidy$year <- as.numeric(income_tidy$year)
income_tidy %>%
filter(year<=2020,year>=1920) %>%
filter(country=="Qatar"|country=="Luxembourg"|country=="Singapore"|country=="Brunei"|country=="Ireland") %>%
ggplot(aes(x=year, y=gdp_per_capita, color=country))+geom_point(shape=1)+geom_line()+
theme(text = element_text(size=6),
axis.text.x = element_text(angle=60, hjust=1)) +
theme(plot.title = element_text(size = 12, face = "bold"),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10))+
labs(title = "GDP per capita over Time",
x = "Year",
y= "GDP per capita")
life_expectancy_100 <- life_tidy %>%
filter(year<=2020,year>=1920)
population_100 <- pop_tidy %>%
filter(year<=2020,year>=1920)
income_100 <- income_tidy %>%
filter(year<=2020,year>=1920)
gapminder_join <- inner_join(life_expectancy_100, population_100, by= c("country", "year"))
gapminder_join <- inner_join(gapminder_join, income_100, by= c("country", "year"))
gapminder_join
#gapminder_join %>%
#filter(year==2020) %>%
#arrange(desc(population))
gapminder_join %>%
filter(country=="China"|country=="India"|country=="United States", country=="Indonesia"|country=="Pakistan") %>%
ggplot(aes(x=life_expectancy, y=population, color=country))+geom_point()
gapminder_join %>%
#filter(country=="China"|country=="India"|country=="United States", country=="Indonesia"|country=="Pakistan") %>%
ggplot(aes(x=life_expectancy, y=population, color=country))+geom_point()
gapminder_join %>%
filter(country=="China"|country=="India"|country=="United States", country=="Indonesia"|country=="Pakistan") %>%
ggplot(aes(x=life_expectancy, y=population, color=country))+geom_point()
gapminder_join %>%
filter(country=="China"|country=="India"|country=="United States"| country=="Indonesia"|country=="Pakistan") %>%
ggplot(aes(x=life_expectancy, y=population, color=country))+geom_point()
gapminder_join %>%
filter(country=="China"|country=="India"|country=="United States"| country=="Indonesia"|country=="Pakistan") %>%
ggplot(aes(x=life_expectancy, y=population, color=country))+geom_point()+geom_line()
gapminder_join %>%
filter(country=="China"|country=="India"|country=="United States"| country=="Indonesia"|country=="Pakistan") %>%
ggplot(aes(x=life_expectancy, y=population, color=country))+geom_point()+geom_line()+
theme(text = element_text(size=6),
axis.text.x = element_text(angle=60, hjust=1)) +
theme(plot.title = element_text(size = 12, face = "bold"),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10))+
labs(title = "Life Expectancy vs. Population for the 5 Most Populated Countries",
x = "Life Expectancy",
y= "Population")
gapminder_join %>%
filter(country=="China"|country=="India"|country=="United States"| country=="Indonesia"|country=="Pakistan") %>%
ggplot(aes(x=life_expectancy, y=population, color=country))+geom_point()+geom_line()+
theme(plot.title = element_text(size = 12, face = "bold"),
axis.text = element_text(size = 10),
axis.title = element_text(size = 10))+
labs(title = "Life Expectancy vs. Population for the 5 Most Populated Countries",
x = "Life Expectancy",
y= "Population")
gapminder_join %>%
filter(year==2020) %>%
arrange(desc(population))
getwd()
library(tidyverse)
library(janitor)
library(here)
library(skimr)
options(scipen=999) #disables scientific notation when printing
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(tidyverse)
library(here)
library(janitor)
library(lubridate)
files <- list.files(path = "data/spiders", pattern = ".csv")
files
files <- list.files(path = "data/spiders", pattern = ".csv", full.names = TRUE)
files
spider_list <- lapply(files, read_csv)
knitr::opts_chunk$set(
collapse = TRUE,
comment = "#>"
)
library(tidyverse)
library(here)
library(janitor)
library(lubridate)
files <- list.files(path = "data/spiders", pattern = ".csv")
files
files <- list.files(path = "data/spiders", pattern = ".csv", full.names = TRUE)
files
spider_list <- lapply(files, read_csv)
spider_list[[3]]
class(spider_list[[3]])
names(spider_list)
spider_list
colnames(spider_list)
names(spider_list[[3]])
names <- list.files(path = "data/spiders", pattern = ".csv")
names_list <- strsplit(names, split = " .csv")
names_list
names_vec <- unlist(names_list)
names_vec
names(spider_list) <- names_vec
names(spider_list)
View(spider_list)
spider_list$Butte
spiders_all <- bind_rows(spider_list)
spiders_all
table_A <- read_csv(here("lab12", "data", "table_A.csv"))
setwd("~/Desktop/BIS15W2021_sviswanathan/lab12")
table_A <- read_csv(here("lab12", "data", "table_A.csv"))
table_A <- read_csv("data/table_A.csv")
table_B <- read_csv("data/table_B.csv")
inner_exampleDF <- inner_join(table_A, table_B, by="customer_ID")
inner_exampleDF
left_exampleDF <- left_join(table_A, table_B, by="customer_ID")
left_exampleDF
right_exampleDF <- right_join(table_A, table_B, by="customer_ID")
right_exampleDF
full_exampleDF <- full_join(table_A, table_B, by="customer_ID")
full_exampleDF
semi_exampleDF <- semi_join(table_A, table_B, by="customer_ID")
semi_exampleDF
anti_exampleDF <- anti_join(table_A, table_B, by="customer_ID")
anti_exampleDF
spiders_locs <- read_csv("data/spiders locations/spiders_locations.csv")
spiders_locs
spiders_with_locs <- left_join(spiders_all, spiders_locs, by = c("Accession"))
summary(spiders_with_locs)
class(spiders_with_locs$Date)
day <- today()
str(day)
datetime <- now()
datetime
dmy(spiders_with_locs$Date)
as.Date(spiders_with_locs$Date, format = "%d/%m/%y")
dateformat1 <- "20200922"
dateformat2 <- "09-22-2020"
dateformat3 <- "22/09/2020"
dateformat4 <- "09-22-2020 17:00:00"
dateformat5 <- "20200922 170000"
dmy(dateformat1)
ymd(dateformat1)
mdy(dateformat2)
dmy(dateformat3)
mdy_hms(dateformat4)
ymd_hms(dateformat5)
year(datetime)
month(datetime)
day(datetime)
hour(datetime)
minute(datetime)
second(datetime)
wday(datetime, label=T)
write.csv(spiders_with_locs, file = "spiders_with_locs.csv", row.names = FALSE)
install.packages("devtools")
library(devtools)
devtools::install_github("dkahle/ggmap")
install.packages("albersusa")
install.packages("albersusa")
devtools::install_github("hrbrmstr/albersusa")
library(tidyverse)
library(here)
library(janitor)
library(ggmap)
spiders <- read_csv(here("lab12", "data", "spiders_with_locs.csv")) %>% clean_names()
spiders <- read_csv("data/spiders_with_locs.csv") %>% clean_names()
library(tidyverse)
library(here)
library(janitor)
library(ggmap)
spiders <- read_csv("data/spiders_with_locs.csv") %>% clean_names()
library(albersusa)
library(tidyverse)
library(here)
library(janitor)
library(ggmap)
spiders <- read_csv("data/spiders_with_locs.csv") %>% clean_names()
spiders <- spiders %>% filter(latitude<=42)
spiders %>%
select(latitude, longitude) %>%
summary()
lat <- c(34.67, 41.80)
long <- c(-124.1, -115.5)
bbox <- make_bbox(long, lat, f = 0.05)
map1 <- get_map(bbox, maptype = "terrain", source = "stamen")
ggmap(map1)
ggmap(map1) +
geom_point(data = spiders, aes(longitude, latitude)) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
map2 <- get_map(bbox, maptype = "toner", source = "stamen")
ggmap(map2) +
geom_point(data = spiders, aes(longitude, latitude, color=latitude)) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
map2 <- get_map(bbox, maptype = "toner-background", source = "stamen")
ggmap(map2) +
geom_point(data = spiders, aes(longitude, latitude, color=latitude)) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
map2 <- get_map(bbox, maptype = "toner-lite", source = "stamen")
ggmap(map2) +
geom_point(data = spiders, aes(longitude, latitude, color=latitude)) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
View(spiders)
ggmap(map2) +
geom_point(data = spiders, aes(longitude, latitude, color=family)) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
ggmap(map2) +
geom_point(data = spiders, aes(longitude, latitude, color=county)) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
ggmap(map2) +
geom_point(data = spiders, aes(longitude, latitude, color=county), size=0.5) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
ggmap(map2) +
geom_point(data = spiders, aes(longitude, latitude, color=county), size=0.5, alpha=1) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
ggmap(map2) +
geom_point(data = spiders, aes(longitude, latitude, color=county), size=0.5, alpha=0.8) +
labs(x = "Longitude", y = "Latitude", title = "Spider Locations")
library(albersusa)
us_comp <- usa_sf() # get a composite map of the USA
cnty_comp <- counties_sf() # get a composite map of USA counties
ggplot() +
geom_sf(data = us_comp, size = 0.125) +
theme_linedraw()+
labs(title = "USA State Boundaries")
ca_comp <- us_comp %>%
filter(name=="California")
ca_cnty_comp <- cnty_comp %>%
filter(state=="California")
ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)
ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)+
geom_point(data = spiders, aes(longitude, latitude))
ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)+
geom_point(data = spiders, aes(longitude, latitude))+
labs(x = "Figure 1: Distribution of Usofila spiders")+
theme_minimal() +
theme(axis.text = element_blank()) +
theme(axis.title.x = element_text(hjust=0.5, size = 10)) +
theme(axis.title.y = element_blank()) +
theme(panel.grid = element_blank()) +
theme(legend.position = c(0.9, 0.3)) -> uso_map
ggsave(filename = "map.svg", device = "svg", plot = uso_map, height = 5, width = 7)
ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)+
geom_point(data = spiders, aes(longitude, latitude))+
labs(x = "Figure 1: Distribution of Usofila spiders")+
theme_minimal() +
theme(axis.text = element_blank()) +
theme(axis.title.x = element_text(hjust=0.5, size = 10)) +
theme(axis.title.y = element_blank()) +
theme(panel.grid = element_blank()) +
theme(legend.position = c(0.9, 0.3)) -> uso_map
ggsave(filename = "map.svg", device = "svg", plot = uso_map, height = 5, width = 7)
ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)+
geom_point(data = spiders, aes(longitude, latitude))+
labs(x = "Figure 1: Distribution of Usofila spiders")+
theme_minimal() +
theme(axis.text = element_blank()) +
theme(axis.title.x = element_text(hjust=0.5, size = 10)) +
theme(axis.title.y = element_blank()) +
theme(panel.grid = element_blank()) +
theme(legend.position = c(0.9, 0.3)) -> uso_map
ggsave(filename = "map.svg", device = "svg", plot = uso_map, height = 5, width = 7)
install.packages("svglite")
ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)+
geom_point(data = spiders, aes(longitude, latitude))+
labs(x = "Figure 1: Distribution of Usofila spiders")+
theme_minimal() +
theme(axis.text = element_blank()) +
theme(axis.title.x = element_text(hjust=0.5, size = 10)) +
theme(axis.title.y = element_blank()) +
theme(panel.grid = element_blank()) +
theme(legend.position = c(0.9, 0.3)) -> uso_map
ggsave(filename = "map.svg", device = "svg", plot = uso_map, height = 5, width = 7)
library(svglite)
library("svglite")
ggplot() +
geom_sf(data = ca_comp, size = 0.125)+
geom_sf(data = ca_cnty_comp, size = 0.125)+
geom_point(data = spiders, aes(longitude, latitude))+
labs(x = "Figure 1: Distribution of Usofila spiders")+
theme_minimal() +
theme(axis.text = element_blank()) +
theme(axis.title.x = element_text(hjust=0.5, size = 10)) +
theme(axis.title.y = element_blank()) +
theme(panel.grid = element_blank()) +
theme(legend.position = c(0.9, 0.3)) -> uso_map
ggsave(filename = "map.svg", device = "svg", plot = uso_map, height = 5, width = 7)
install.packages("svglite")
